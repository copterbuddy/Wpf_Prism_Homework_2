<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="MainToolbarButtonStyle" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="16" />
            </Style>
        </Style.Resources>

        <Setter Property="Margin" Value="0,0,10,0" />

        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Background" Value="#503181" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="16,8">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Violet" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Yellow" />
                <Setter Property="Foreground" Value="DarkViolet" />
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style x:Key="MainToolbarDropDownButtonStyle" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="16" />
            </Style>
        </Style.Resources>

        <Setter Property="Margin" Value="0,0,0,0" />

        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Background" Value="#503181" />
        <Setter Property="Foreground" Value="White" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="16,8">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Violet" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Yellow" />
                <Setter Property="Foreground" Value="DarkViolet" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Login Page -->
    <Style x:Key="LoginBoxTextTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#ffffff" />
    </Style>
    <Style x:Key="LoginBoxTextTitle2" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>
    <Style x:Key="LoginBoxTextTitle3" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>
    <Style x:Key="LoginBoxTextTitleBody" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#503181" />
    </Style>
    <Style x:Key="LoginBoxTextTitleBody2" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#503181" />
    </Style>
    <Style x:Key="LoginBoxTextLabel" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SCBFontFamily}" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="#503181" />
    </Style>
    <Style x:Key="LoginBottomText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SCBFontFamily}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#ffffff" />
    </Style>
    <ControlTemplate x:Key="PasswordBox" TargetType="{x:Type PasswordBox}">
        <Border Background="{TemplateBinding Background}" 
            x:Name="Bd" BorderBrush="#98d7f8"
            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="UsernameBox" TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton x:Name="DropDownToggle"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
                  Margin="-1" HorizontalContentAlignment="Right"
                  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,
                              RelativeSource={RelativeSource TemplatedParent}}"
                           BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="{TemplateBinding Background}"
                          >
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="ClickMode" Value="Press"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="templateRoot" BorderBrush="#98d7f8" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#98d7f8" Offset="0"/>
                                                <GradientStop Color="#98d7f8" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                            <Path x:Name="BtnArrow" Height="7" Width="15" 
                    Stretch="Fill" Margin="-15,0,0,0"  Fill="Black"
                    Data="F1 M 300,-190L 310,-190L 305,-183L 301,-190 Z " />
                                        </Border>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>

            </ToggleButton>

            <Popup x:Name="PART_Popup" IsOpen="{TemplateBinding IsDropDownOpen}">
                <Border x:Name="PopupBorder" 
                    HorizontalAlignment="Stretch" Height="Auto" 
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="#98d7f8" Background="White" CornerRadius="0">
                    <ScrollViewer x:Name="ScrollViewer" BorderBrush="#98d7f8" BorderThickness="0" Padding="1">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                              Content="{TemplateBinding SelectionBoxItem}" 
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="True" Margin="{TemplateBinding Padding}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
    </ControlTemplate>

    <!-- Main Page -->
    <Style x:Key="MainBottomText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SCBFontFamily}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#9c9a9d" />
    </Style>
    <Style x:Key="LandingTextUserInfo" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="#503181" />
    </Style>

    <!--Passbook Page-->
    <Style x:Key="EprintTitleLabel" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="#F4B45A" />
        <Setter Property="Foreground" Value="#503181" />
    </Style>

    <Style x:Key="EprintSubTitleLabel" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#FFFFFF" />
    </Style>

    <Style x:Key="TextBoxEntryStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#98D7F8" />
        <Setter Property="TextDecorations" Value="Underline" />
        <Setter Property="Width" Value="300" />
        <Setter Property="Margin" Value="20,10" />
    </Style>

    <Style x:Key="PurpleWhiteButtonStyle" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="16" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="#503181" />
        <Setter Property="Height" Value="34" />
        <Setter Property="Width" Value="115" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" >
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F4B45A" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#F4B45A" />
                <Setter Property="Foreground" Value="DarkViolet" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrintButtonStyle" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="16" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#503181" />

        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="240" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="1" Padding="0,0">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#DEDCF1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SendEmailButtonStyle" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="16" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#DEDCF1" />
        <Setter Property="Foreground" Value="#503181" />
        <Setter Property="Height" Value="34" />
        <Setter Property="Width" Value="115" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" BorderThickness="0" >
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F4B45A" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Yellow" />
                <Setter Property="Foreground" Value="DarkViolet" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextBlockInnerInfoTHStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource Book_Basis}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Thin" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="TextBlockInnerInfoENStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource MonospaceTypewriter}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="TextBlockInnerInfoNumStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource MonospaceTypewriter}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="TextBlockInnerTopicStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource CordiaUPC}" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="#503181" />
    </Style>

    <Style x:Key="TextBlockTimeStampStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource Kittithada_Roman_55}" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="Black" />
    </Style>

    <Style x:Key="TextBlockProcessingStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#503181" />
    </Style>

    <Style x:Key="TextBlockErrorMessageStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="#503181" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="TextBlockSearchCustomerStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontWeight" Value="Thin" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="TextBoxSearCustomerEntryStyle" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="21" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="FontWeight" Value="Thin" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="#98D7F8" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="9,0,0,0" />
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="8"/>
            </Style>
        </Style.Resources>
    </Style>

    <ControlTemplate x:Key="ComboBoxSeachCustomerStyle" TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton VerticalAlignment="Stretch"  
                          HorizontalContentAlignment="Right"
                          IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="{TemplateBinding Background}">
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="ClickMode" Value="Press"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border BorderBrush="#98d7f8" CornerRadius="5" 
                                            BorderThickness="{TemplateBinding BorderThickness}" 
                                            SnapsToDevicePixels="True">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#98d7f8" Offset="0"/>
                                                <GradientStop Color="#98d7f8" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>

                                        <Path HorizontalAlignment="Right" Height="7" Width="15" Stretch="Fill" Margin="0,0,10,0" Fill="#4F307F" Data="F1 M 300,-190L 310,-190L 305,-183L 301,-190 Z " />

                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>

            <Popup x:Name="PART_Popup" IsOpen="{TemplateBinding IsDropDownOpen}">
                <Border HorizontalAlignment="Stretch" Height="Auto"
                        MinWidth="{TemplateBinding ActualWidth}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="#98d7f8"  
                        Background="#98d7f8" 
                        CornerRadius="0">
                    <ScrollViewer x:Name="ScrollViewer" BorderBrush="#98d7f8" BorderThickness="10" Padding="1">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </Border>
            </Popup>

            <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              Content="{TemplateBinding SelectionBoxItem}" 
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              IsHitTestVisible="True" Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
    </ControlTemplate>

    <!--Style For Teller.Services Start By Free 19/05/2021-->
    <Style x:Key="MainOtherSeviceTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="#6a588b" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontSize" Value="30" />
        <Setter Property="Margin" Value="10" />
    </Style>

    <Style x:Key="MainOtherSeviceButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#6a588b" />
        <Setter Property="Background" Value="#cbc0e9" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="20" Background="{TemplateBinding Background}" BorderThickness="0" >
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="Foreground" Value="#aca9be" />
                <Setter Property="Background" Value="#c5c2d5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BackOtherSeviceButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="10" />
        <Setter Property="FontFamily" Value="Kittithada Bold 75" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="DarkViolet" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="16" Background="{TemplateBinding Background}" BorderThickness="2" BorderBrush="DarkViolet" Padding="50,5">
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style For Teller.Services End By Free 19/05/2021-->

    <!--Style For Teller.SellFund Start By Free 24/05/2021-->
    <Style x:Key="MainSellFundButtonBase" TargetType="{x:Type Button}" >
        <Setter Property="Margin" Value="5" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="15pt" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Height" Value="39px" />
        <Setter Property="MinWidth" Value="175px" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="18.553" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#503081" Padding="40, 0" >
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainSellFundButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MainSellFundButtonBase}">
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Background" Value="#503081" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#DEDCF1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="Visibility" Value="Hidden" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="MainSellFundOptionButton" TargetType="{x:Type Button}" BasedOn="{StaticResource MainSellFundButtonBase}">
        <Setter Property="Foreground" Value="#503081" />
        <Setter Property="Background" Value="#ffffff" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F4B45A" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="Visibility" Value="Hidden" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainSellFundButtonInTable" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="60" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Foreground" Value="#503081" />
        <Setter Property="Margin" Value="20, 0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#503081" >
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F4B45A" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="Visibility" Value="Hidden" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MainSellFundLabelBlack" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="16pt" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="MainSellFundLabelBoldBlack" TargetType="{x:Type Label}" BasedOn="{StaticResource MainSellFundLabelBlack}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
    </Style>

    <Style x:Key="MainSellFundLabelRegularBlack" TargetType="{x:Type Label}" BasedOn="{StaticResource MainSellFundLabelBlack}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
    </Style>

    <Style x:Key="MainSellFundLabelTitle" TargetType="{x:Type Label}" BasedOn="{StaticResource MainSellFundLabelBoldBlack}">
        <Setter Property="Margin" Value="5, 0" />
    </Style>

    <Style x:Key="MainSellFundTextBoxBoldBlack" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="16pt" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="MainSellFundBorderTextBox" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="39px" />
        <Setter Property="Margin" Value="0, 0, 30, 0" />
        <Setter Property="BorderThickness" Value="1pt" />
        <Setter Property="BorderBrush" Value="#503081" />
        <Setter Property="Background" Value="#98d7f8" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style x:Key="MainSellFundButtonSearch" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <ControlTemplate x:Key="CommandSellFundBox" TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton x:Name="DropDownToggle"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
                  Margin="-1" HorizontalContentAlignment="Right"
                  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,
                              RelativeSource={RelativeSource TemplatedParent}}"
                           BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="{TemplateBinding Background}"
                          >
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="ClickMode" Value="Press"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="templateRoot" BorderBrush="#503081" CornerRadius="10" BorderThickness="1pt" SnapsToDevicePixels="True">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#98d7f8" Offset="0"/>
                                                <GradientStop Color="#98d7f8" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                            <Path x:Name="BtnArrow" Height="7" Width="15" 
                                                  Stretch="Fill" Margin="-15,0,0,0"  Fill="#503081"
                                                  Data="F1 M 300,-190L 310,-190L 305,-183L 301,-190 Z " />
                                        </Border>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>

            </ToggleButton>

            <Popup x:Name="PART_Popup"
                  IsOpen="{TemplateBinding IsDropDownOpen}">
                <Border x:Name="PopupBorder" 
                    HorizontalAlignment="Stretch" Height="Auto" 
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="#98d7f8" Background="White" CornerRadius="0">
                    <ScrollViewer x:Name="ScrollViewer" BorderBrush="#98d7f8" BorderThickness="0" Padding="1">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </Border>
            </Popup>
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="True" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                <ContentPresenter.Style>
                    <Style TargetType="{x:Type ContentPresenter}" >
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <Trigger Property="Content" Value="" >
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ContentPresenter.Style>
            </ContentPresenter>
            <ContentPresenter x:Name="contentPresenter2" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding Text}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="True" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" >
                <ContentPresenter.Style>
                    <Style TargetType="{x:Type ContentPresenter}" >
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=contentPresenter, Path=Visibility}" Value="Collapsed" >
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ContentPresenter.Style>
            </ContentPresenter>
        </Grid>
    </ControlTemplate>

    <Style x:Key="SellFundItemComboBox" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="#98d7f8"/>
        <Setter Property="BorderBrush" Value="#503081"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True" >
                <Setter Property="Background" Value="#F4B45A" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SellFundInvestConditionLabelBlack" TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="11pt" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
    </Style>

    <Style x:Key="SellFundInvestConditionTextBlockBlack" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="11pt" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="10, 4, 0, 0" />
    </Style>

    <Style x:Key="SellFundInvestConditionBorderTextBox" TargetType="{x:Type Border}">
        <Setter Property="Height" Value="50px" />
        <Setter Property="BorderThickness" Value="1pt" />
        <Setter Property="BorderBrush" Value="#503081" />
        <Setter Property="Background" Value="#e0e0e2" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style x:Key="SellFundWaitApprovalDialogTextBlockBlack" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="16pt" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style x:Key="SellFundWaitApprovalDialogTextBlockRed" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14pt" />
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>
    <!--Style For Teller.SellFund End By Free 24/05/2021-->

    <!--SellFund-->
    <Style x:Key="TextBoxSearchStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="23" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Width" Value="300" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style x:Key="TextBlockHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunExtraLight}" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="20,2" />
    </Style>

    <Style x:Key="TextBlockHeaderStyle2" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunMedium}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="20,2" />
    </Style>

    <Style x:Key="DialogCancelButton" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="16" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="#503181" />
        <Setter Property="Height" Value="34" />
        <Setter Property="Width" Value="175" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" BorderThickness="1" >
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F7B559" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DialogSearchButton" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="16" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#503181" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="34" />
        <Setter Property="Width" Value="175" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" Padding="0,0">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#DEDCF1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="SubmitSellFundButton" TargetType="{x:Type Button}" >
        <Setter Property="Margin" Value="5" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="15pt" />
        <Setter Property="Background" Value="#503181" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Height" Value="39px" />
        <Setter Property="MinWidth" Value="175px" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="18.553" Background="{TemplateBinding Background}" BorderThickness="1" Padding="40, 0" >
                        <ContentPresenter HorizontalAlignment="Center"  VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#DEDCF1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False" >
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="BorderBrush" Value="LightGray" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SearchTypeComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="16" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Background" Value="#98d7f8" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="35" />
        <Setter Property="Width" Value="350" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <!--<Border Background="{TemplateBinding Background}" BorderThickness="1" Padding="0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Grid.Column="0"/>
                            <Image Source="/Teller.SellFund;component/Images/down_icon.png" Width="20" Height="20" Margin="0,0,10,0" Grid.Column="1">
                            </Image>
                        </Grid>
                    </Border>-->

                    <ContentPresenter x:Name="contentPresenter" 
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                              Content="{TemplateBinding SelectionBoxItem}" 
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#DEDCF1" />
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="True">
                <Setter Property="Background" Value="#DEDCF1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- AlertDialog  -->
    <Style x:Key="AlertTextTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>
    <Style x:Key="AlertButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="4" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="27" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Foreground" Value="#503081" />
        <Setter Property="Background" Value="#ffffff" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="13" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#503081">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SelectFundDialog  -->
    <Style x:Key="SelectFundTextTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>
    <Style x:Key="SelectFundTextTitleBold" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>
    <ControlTemplate x:Key="FundBox" TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton x:Name="DropDownToggle"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
                  Margin="-1" HorizontalContentAlignment="Right"
                  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,
                              RelativeSource={RelativeSource TemplatedParent}}"
                           BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}" 
                          Background="{TemplateBinding Background}"
                          >
                <ToggleButton.Style>
                    <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="IsTabStop" Value="False"/>
                        <Setter Property="Focusable" Value="False"/>
                        <Setter Property="ClickMode" Value="Press"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Border x:Name="templateRoot" BorderBrush="#98d7f8" CornerRadius="5" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                                <GradientStop Color="#98d7f8" Offset="0"/>
                                                <GradientStop Color="#98d7f8" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="True" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                            <Path x:Name="BtnArrow" Height="7" Width="15" 
                    Stretch="Fill" Margin="-15,0,0,0"  Fill="Black"
                    Data="F1 M 300,-190L 310,-190L 305,-183L 301,-190 Z " />
                                        </Border>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ToggleButton.Style>

            </ToggleButton>

            <Popup x:Name="PART_Popup" IsOpen="{TemplateBinding IsDropDownOpen}">
                <Border x:Name="PopupBorder" 
                    HorizontalAlignment="Stretch" Height="Auto" 
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                      BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="#98d7f8" Background="White" CornerRadius="0">
                    <ScrollViewer x:Name="ScrollViewer" BorderBrush="#98d7f8" BorderThickness="0" Padding="1">
                        <ItemsPresenter/>
                    </ScrollViewer>
                </Border>
            </Popup>

            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="True" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
    </ControlTemplate>

    <!-- FundDetailDialog  -->
    <Style TargetType="DataGridCell">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="#000000" />
                <Setter Property="Background" Value="#efe3f3"/>
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="FundDetailTextTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>
    <Style x:Key="FundDetailTextTitleBold" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="17" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>
    <Style x:Key="FundDetailTextSubTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>
    <Style x:Key="FundDetailTextSubTitleBold" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>
    <Style x:Key="FundDetailTextRadio" TargetType="{x:Type RadioButton}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#000000" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="SaleUnitBox" TargetType="{x:Type TextBox}">
        <Border Background="{TemplateBinding Background}" 
            x:Name="Bd" BorderBrush="Black"
            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
            <ScrollViewer Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Border>
    </ControlTemplate>
    <Style x:Key="FundDetailButton" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="4" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="27" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Foreground" Value="#ffffff" />
        <Setter Property="Background" Value="#503081" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="13" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#503081">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FundDetailButton2" TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="4" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="27" />
        <Setter Property="Width" Value="120" />
        <Setter Property="Foreground" Value="#503081" />
        <Setter Property="Background" Value="#ffffff" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="13" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="#503081">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- FundDetailNotiDialog  -->
    <Style x:Key="FundDetailNotiTextTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>
    <Style x:Key="FundDetailNotiTextTitle2" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="Foreground" Value="#ff0000" />
    </Style>
    <Style x:Key="TitleDialogStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="FontSize" Value="22" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>

    <Style x:Key="DialogDetailStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="{DynamicResource SarabunRegular}" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="FontWeight" Value="Regular" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Foreground" Value="#000000" />
    </Style>

    <!--ApproveDialog-->
    <ControlTemplate x:Key="PasswordBoxTemplate" TargetType="{x:Type PasswordBox}">
        <Border Background="{TemplateBinding Background}" 
            x:Name="Bd" BorderBrush="#4F307F"
            BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
            <ScrollViewer 
                Margin="10,0"
                Name="PART_ContentHost" 
                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
        </Border>
    </ControlTemplate>
    <Style x:Key="DefaultWhiteButtonOldStyle" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="8" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunMedium}" />
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="#503181" />
        <Setter Property="Height" Value="47" />
        <Setter Property="Width" Value="155" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0" >
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F7B559" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="DefaultWhiteButtonOldStyle2" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="8" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunMedium}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="#503181" />
        <Setter Property="Height" Value="18" />
        <Setter Property="Width" Value="50" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0" >
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F7B559" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultWhiteButtonStyle" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="16" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="#503181" />
        <Setter Property="Height" Value="36" />
        <Setter Property="Width" Value="152" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0" >
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F7B559" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultPurpleButtonStyle" TargetType="Button">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="16" />
            </Style>
        </Style.Resources>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource SarabunBold}" />
        <Setter Property="BorderThickness" Value="1.5" />
        <Setter Property="Background" Value="#503181" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Height" Value="38" />
        <Setter Property="Width" Value="162" />
        <Setter Property="FontSize" Value="19" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding Foreground}" BorderThickness="{TemplateBinding BorderThickness}" Padding="0" >
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F1E8FF" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>